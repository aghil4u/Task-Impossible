@model TaskImpossible.Services.PagedList.PaginatedList<iTask>

@{
    ViewData["Title"] = "Explore Tasks";
}
<div class="container" style="margin-bottom: 2rem; margin-top: 20rem;">

    <div class="card card-form-horizontal" style="border-radius: 50px">
        <div class="card-content" style="margin-right: -2px; padding: 0px;">

            <div class="col-sm-2 col-sm-offset-10">

                <div class="btn-group bootstrap-select">
                    <select class="selectpicker" data-style="btn btn-primary btn-round" title="Sort By" data-size="7" onchange="window.location.href = '/Tasks?so=' + this.value;" tabindex="-98">
                        <option class="bs-title-option" value="">@ViewData["cs"]</option>

                        <option value="Title">Title</option>
                        <option value="Date">Date</option>
                    </select>
                </div>


            </div>
        </div>
    </div>


</div>

<div class="cards">

    <div class="container">
        <div class="col-sm-3">

            <div class="card">
                <div id="map" class="map map-rounded" style="height: 200px; width: 100%;"></div>
            </div>


            <div class="card" style="height: 50rem; width: 100%">

                <a asp-action="Index" asp-route-so="@ViewData["NameSortParm"]" asp-route-cf="@ViewData["cf"]">Title</a>
                <a asp-action="Index" asp-route-so="@ViewData["DateSortParm"]" asp-route-cf="@ViewData["cf"]">Date</a>
                <a asp-action="Index" id="NearMeButton">Near Me</a>

                <div class="card-content">
                   
                        <div class="form-group is-empty" style="width: 100%;">
                            <input type="text" id="SearchTextBox"  class="form-control" placeholder="Search" value="@ViewData["cf"]">

                        </div>

                        <input type="number" max="100" min="1" value="@ViewData["SearchRadius"]" id="SearchRadiusTextBox"  placeholder="Within" class="form-control">

                        <div id="DistanceSlider" class="slider noUi-horizontal">

                        </div>
                   


                    <div class="footer pull-center text-center" style="bottom: 0px; left: 0px; position: absolute; right: 0px; width: auto;">
                        <button class="btn btn-rose btn-raised btn-round" id="UpdateSearchButton" style="">
                            Update
                            <div class="ripple-container"></div>
                        </button>

                    </div>
                </div>
            </div>
        </div>
        <div class="col-sm-9">
            <div class="card-columns">






                @foreach (var item in Model)
                {
                    @*<div class="col-md-4" style="padding: 10px">*@
                    <div class="card card-blog">
                        @if (item.CoverPhoto != "")
                        {
                            <a asp-action="Details" asp-route-id="@item.Id">
                                <div class="card-image">

                                    <img class="img" src="@item.CoverPhoto">


                                </div>
                            </a>
                        }


                        <div class="card-content" style="margin-top: -1rem">

                            @switch (item.DatePretext)
                            {
                                case 1:
                                    <h6 class="category text-success">ON @item.StartDate.ToString("dd-MM-yy H:mm tt")</h6>
                                    break;
                                case 2:
                                    <h6 class="category text-success">BEFORE @item.StartDate.ToString("dd-MM-yy H:mm tt") </h6>
                                    break;
                                case 3:
                                    <h6 class="category text-success">AFTER @item.StartDate.ToString("dd-MM-yy H:mm tt") </h6>
                                    break;
                                case 4:
                                    <h6 class="category text-success">FROM @item.StartDate.ToString("dd-MM-yy") TO @item.EndDate.ToString("dd-MM-yy")</h6>
                                    break;
                            }


                            <h4 class="card-title" style="margin-top: -1rem">
                                <a asp-action="Details" asp-route-id="@item.Id">@item.Title</a>
                            </h4>
                            <p class="card-description" style="word-break: break-all">
                                @item.Description;
                            </p>
                            <div class="footer">
                                <div class="author">
                                    <a href="#pablo">
                                        @*<img src="/images/sample (3).jpg" alt="..." class="avatar img-raised">*@

                                        @if (item.Lat > 0 && item.Lon > 0 && ViewData["MyLat"] != null && ViewData["MyLon"] != null)
                                        {
                                            var lat1 = (double) ViewData["MyLat"];
                                            var lon1 = (double) ViewData["MyLon"];
                                            var R = 6371; // Radius of the earth in km
                                            var dLat = Math.PI / 180 * (item.Lat - lat1); // deg2rad below
                                            var dLon = Math.PI / 180 * (item.Lon - lon1);
                                            var a =
                                                Math.Sin(dLat / 2) * Math.Sin(dLat / 2) +
                                                Math.Cos(Math.PI / 180 * lat1) * Math.Cos(Math.PI / 180 * item.Lat) *
                                                Math.Sin(dLon / 2) * Math.Sin(dLon / 2)
                                                ;
                                            var c = 2 * Math.Atan2(Math.Sqrt(a), Math.Sqrt(1 - a));
                                            var d = R * c; // Distance in km

                                            <span>
                                                <b> @string.Format("{0:0.0} KM", d)</b>
                                            </span>
                                        }




                                    </a>
                                </div>
                                <div class="stats">
                                    <i class="material-icons">attach_money</i> @item.Renumeration
                                </div>
                            </div>
                        </div>
                    </div>

                    @*</div>*@
                }

            </div>
        </div>
    </div>

</div>

<div class="container">

    @{
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }

    <div class="col-sm-9 col-sm-offset-3">
        <ul class="pagination" style="left: 30%; position: relative; top: 20px">
            <li>
                <a asp-action="Index"
                   asp-route-so="@ViewData["cs"]"
                   asp-route-page="@(Model.PageIndex - 1)"
                   asp-route-cf="@ViewData["cf"]"
                   class="btn btn-default @prevDisabled">
                    prev
                </a>
            </li>
            @for (var i = 1; i < Model.TotalPages + 1; i++)
            {
                if (i == Model.PageIndex)
                {
                    <li class="active">
                        <a>@i</a>
                    </li>
                }
                else
                {
                    <li>
                        <a asp-action="Index"
                           asp-route-so="@ViewData["cs"]"
                           asp-route-page="@(i)"
                           asp-route-cf="@ViewData["cf"]">
                            @i</a>
                    </li>
                }
            }

            <li>
                <a asp-action="Index"
                   asp-route-so="@ViewData["cs"]"
                   asp-route-page="@(Model.PageIndex + 1)"
                   asp-route-cf="@ViewData["cf"]"
                   class="btn btn-default @nextDisabled">
                    next
                    <div class="ripple-container"></div>
                </a>
            </li>
        </ul>
    </div>

</div>


<script src="~/lib/jquery/dist/jquery.js"></script>
<script src="~/js/nouislider.js"></script>
<script type="text/javascript">
    $(document).ready(function() {
        $('.selectpicker').selectpicker();



        $("#UpdateSearchButton").click(function () {

            // Try HTML5 geolocation.
            if (navigator.geolocation) {

                navigator.geolocation.getCurrentPosition(function(position) {

                    var srt = document.getElementById('SearchRadiusTextBox');
                    var stt=document.getElementById('SearchTextBox');
                    window.location = "/Tasks?lt=" + position.coords.latitude + "&ln=" + position.coords.longitude + "&r=" + srt.value + "&s=" + stt.value;


                });

            }


        });
    });

    //MAP WORKS
    var map, pos, marker, cityCircle, km, mapop;

    function initMap() {

        pos = { lat: -34.397, lng: 150.644 };
        map = new google.maps.Map(document.getElementById('map'),
            {
                center: pos,
                zoom: 11,
                zoomControl: true,
                mapTypeControl: false,
                scaleControl: false,
                streetViewControl: false,
                rotateControl: false,
                fullscreenControl: true,

            });

        var tasklist = @Html.Raw(ViewBag.TaskJson);

        for (var i = 0; i < tasklist.length; i++) {
            // alert(tasklist[i].Title);
            var posi = { lat: tasklist[i].Lat, lng: tasklist[i].Lon };
            var mar = new google.maps.Marker({
                map: map,
                position: posi,
                title: tasklist[i].Title
            });

            mar.setMap(map);

        }

        var myMarker = new google.maps.Marker({
            map: map,
            animation: google.maps.Animation.DROP,
            position: pos
        });

        // Try HTML5 geolocation.
        if (navigator.geolocation) {

            navigator.geolocation.getCurrentPosition(function(position) {
                pos = {
                    lat: position.coords.latitude,
                    lng: position.coords.longitude
                };

               
                    km = @ViewData["SearchRadius"];
                


                //var km = parseInt(document.getElementById('km').value);
                map.setCenter(pos);
                DrowCircle(map, pos, km);
            });

        }
    }



    function DrowCircle(map, pos, km) {
        //  document.getElementById("cityCircle").remove();
        var populationOptions = {
            strokeColor: '#e91e637a',
            strokeOpacity: 0.8,
            strokeWeight: 2,
            fillColor: '#e91e633b',
            fillOpacity: 0.35,
            map: map,
            center: pos,
            radius: Math.sqrt(km * 500) * 100
        };


        cityCircle = new google.maps.Circle(populationOptions);
    }




    var slider = document.getElementById('DistanceSlider');

    noUiSlider.create(slider,
        {
            start: @ViewData["SearchRadius"],
            connect: [true, false],
            range: {
                min: 1,
                '99%': 100,
                max: 9999
            }
        });

    var inputNumber = document.getElementById('SearchRadiusTextBox');

    slider.noUiSlider.on('update', function( values, handle ) {
        var value = values[handle];
        inputNumber.value = value;
        if (value == 9999) {
            inputNumber.value = "Everywhere..";
        }
       });

    inputNumber.addEventListener('change', function(){
        slider.noUiSlider.set(this.value);
    });


</script>


<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAbzz2gsUhD2YunQ0oZC4dQAw8XCG1E8tQ&callback=initMap">
</script>